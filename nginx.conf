worker_processes  1;
events {
    worker_connections  1024;
}
http {
    include       mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    keepalive_timeout  65;
    lua_package_path "/usr/local/openresty/nginx/lua-plugins/lua-resty-jwt-0.1.11/lib/?.lua;;";

    server {
		listen       80;
        server_name  localhost;
        default_type text/plain;
        location = /verify {
            content_by_lua '
                local cjson = require "cjson"
                local jwt = require "resty.jwt"
				local jwt_tenant_key = ngx.var.arg_key
				local jwt_token = ngx.var.arg_token
				
                local jwt_obj = jwt:verify(jwt_tenant_key, jwt_token)
                ngx.say(cjson.encode(jwt_obj))
            ';
        }
        location = /sign {
			access_by_lua_block {
                local jwt = require "resty.jwt"
				local jwt_tenant_key = ngx.var.arg_key
				if
                local jwt_token = jwt:sign("lua-resty-jwt",
                    {
                        header={typ="JWT", alg="HS256"},
                        payload={foo="bar"}
                    }
                )
                ngx.say(jwt_token)
			}

        }
    }
}